<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lablgtk2 tutorial on Documentation for Hugo Learn Theme</title>
    <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/</link>
    <description>Recent content in lablgtk2 tutorial on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://ohama.github.io/ocaml/lablgtk2-tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/introduction/</guid>
      <description>GTK (GIMP Toolkit) is a library for creating graphical user interfaces. It is licensed using the LGPL license, so you can develop open software, free software, or even commercial non-free software using GTK without having to spend anything for licenses or royalties.
It&amp;rsquo;s called the GIMP toolkit because it was originally written for developing the GNU Image Manipulation Program (GIMP), but GTK has now been used in a large number of software projects, including the GNU Network Object Model Environment (GNOME) project.</description>
    </item>
    
    <item>
      <title>Undocumented widgets</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/undocumentedwidgets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/undocumentedwidgets/</guid>
      <description>These all require authors! :) Please consider contributing to our tutorial.
If you must use one of these widgets that are undocumented, I strongly suggest you take a look at their respective header files in the GTK distribution. GTK&amp;rsquo;s function names are very descriptive. Once you have an understanding of how things work, it&amp;rsquo;s not difficult to figure out how to use a widget simply by looking at its function declarations.</description>
    </item>
    
    <item>
      <title>Setting widget attributes</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/settingwidgetattributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/settingwidgetattributes/</guid>
      <description>This describes the functions used to operate on widgets. These can be used to set style, padding, size, etc. You can get access these method through misc method, for example, button#misc#hide ().
For full descriptions, see GObj.misc_ops.
(Maybe I should make a whole section on accelerators.)
method activate : unit -&amp;gt; bool method set_name : string -&amp;gt; unit method name : string method set_sensitive : bool -&amp;gt; unit method set_style : style -&amp;gt; unit method style : style method set_size_request : ?</description>
    </item>
    
    <item>
      <title>Advanced event and signal handling</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/advancedevent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/advancedevent/</guid>
      <description>Signal Functions Connecting and Disconnecting Signal Handlers let handler_id = [widget]#connect#[signal name] ~callback:... in let handler_id = [widget]#event#connect#[event signal name] ~callback:... in let handler_id = [widget]#event#connect#after#[event signal name] ~callback:... in [widget]#misc#disconnect [handler_id]; Blocking and Unblocking Signal Handlers [widget]#misc#handler_block [handler_id]; [widget]#misc#handler_unblock [handler_id]; Signal Emission and Propagation Signal emission is the process whereby GTK runs all handlers for a specific object and signal.
First, note that the return value from a signal emission is the return value of the last handler executed.</description>
    </item>
    
    <item>
      <title>Clipboard</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/clipboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/clipboard/</guid>
      <description>There is the &amp;ldquo;Managing Selections&amp;rdquo; chapter in the original C version tutorial. Even thought LablGtk supports &amp;ldquo;selection&amp;rdquo; widget too, &amp;ldquo;clipboard&amp;rdquo; widget is simpler so we will make document only for this widget for the time being.
 Text copy and paste is a good example of clipboard widget. You can do inter-processor communication throuth the widget.
Before copy or paste, you have the access point to the clipboard: see Gdk.</description>
    </item>
    
    <item>
      <title>Drag-and-drop</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/dnd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/dnd/</guid>
      <description>GTK+ has a high level set of functions for doing inter-process communication via the drag-and-drop system. GTK+ can perform drag-and-drop on top of the low level Xdnd and Motif drag-and-drop protocols.
Overview An application capable of GTK+ drag-and-drop first defines and sets up the GTK+ widget(s) for drag-and-drop. Each widget can be a source and/or destination for drag-and-drop.
Source widgets can send out drag data, thus allowing the user to drag things off of them, while destination widgets can receive drag data.</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/contributing/</guid>
      <description>This document, like so much other great software out there, was created for free by volunteers. If you are at all knowledgeable about any aspect of GTK that does not already have documentation, please consider contributing to this document.
If you do decide to contribute, please mail your text to Tony Gale, gale@gtk.org. Also, be aware that the entirety of this document is free, and any addition by you provide must also be free.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/credits/</guid>
      <description>We would like to thank the following for their contributions to this text.
 Bawer Dagdeviren, chamele0n@geocities.com for the menus tutorial.
 Raph Levien, raph@acm.org for hello world ala GTK, widget packing, and general all around wisdom. He&amp;rsquo;s also generously donated a home for this tutorial.
 Peter Mattis, petm@xcf.berkeley.edu for the simplest GTK program.. and the ability to make it :)
 Werner Koch werner.koch@guug.de for converting the original plain text to SGML, and the widget class hierarchy.</description>
    </item>
    
    <item>
      <title>Tutorial copyright and permissions notice</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/copyright/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/copyright/</guid>
      <description>The GTK Tutorial is Copyright &amp;copy; 1997 Ian Main.
Copyright &amp;copy; 1998-2002 Tony Gale.
Permission is granted to make and distribute verbatim copies of this manual provided the copyright notice and this permission notice are preserved on all copies.
Permission is granted to copy and distribute modified versions of this document under the conditions for verbatim copying, provided that this copyright notice is included exactly as in the original, and that the entire resulting derived work is distributed under the terms of a permission notice identical to this one.</description>
    </item>
    
  </channel>
</rss>