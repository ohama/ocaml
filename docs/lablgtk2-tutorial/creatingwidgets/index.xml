<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Creating Widgets on Documentation for Hugo Learn Theme</title>
    <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/creatingwidgets/</link>
    <description>Recent content in Creating Widgets on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://ohama.github.io/ocaml/lablgtk2-tutorial/creatingwidgets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Default arguments</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/creatingwidgets/defaultarguments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/creatingwidgets/defaultarguments/</guid>
      <description>For many constructor or method arguments, default values are provided. Generally, this default value is defined by GTK, and you must refer to GTK&amp;rsquo;s documentation.
For ML defined defaults, usually default values are either false, 0, None or `NONE, according to the expected type.
Important exceptions are ~show, which default to true in all widgets except those in GWindow, and ~fill, which defaults to true or `BOTH.</description>
    </item>
    
    <item>
      <title>Memory management</title>
      <link>https://ohama.github.io/ocaml/lablgtk2-tutorial/creatingwidgets/memorymanagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ohama.github.io/ocaml/lablgtk2-tutorial/creatingwidgets/memorymanagement/</guid>
      <description>Important efforts have been dedicated to cooperate with Gtk&amp;rsquo;s reference counting mechanism. As a result you should generally be able to use Gdk/Gtk data structures without caring about memory management. They will be freed when nobody points to them any more. This also means that you do not need to pay too much attention to whether a data structure is still alive or not. If it is not, you should get an error rather than a core dump.</description>
    </item>
    
  </channel>
</rss>